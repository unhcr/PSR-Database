--
-- ASR_STATELESS - Stateless people
--
create or replace view ASR_STATELESS as
with Q_ASR_STATELESS as
 (select ASR_YEAR, LOC_ID_ASYLUM_COUNTRY, DIM_ID1 as DIM_ID_SPOPTYPE, STG_ID_PRIMARY,
    STAPOP_START_VALUE,
    STAPOP_START_STC_ID, STAPOP_START_VERSION_NBR, STAPOP_START_ITM_ID,
    STAPOP_AH_START_VALUE,
    STAPOP_AH_START_STC_ID, STAPOP_AH_START_VERSION_NBR, STAPOP_AH_START_ITM_ID,
    NATLOSS_VALUE,
    NATLOSS_STC_ID, NATLOSS_VERSION_NBR, NATLOSS_ITM_ID,
    STAOTHINC_VALUE,
    STAOTHINC_STC_ID, STAOTHINC_VERSION_NBR, STAOTHINC_ITM_ID,
    NATACQ_VALUE,
    NATACQ_STC_ID, NATACQ_VERSION_NBR, NATACQ_ITM_ID,
    STAOTHDEC_VALUE,
    STAOTHDEC_STC_ID, STAOTHDEC_VERSION_NBR, STAOTHDEC_ITM_ID,
    STAPOP_END_VALUE,
    STAPOP_END_STC_ID, STAPOP_END_VERSION_NBR, STAPOP_END_ITM_ID,
    STAPOP_AH_END_VALUE,
    STAPOP_AH_END_STC_ID, STAPOP_AH_END_VERSION_NBR, STAPOP_AH_END_ITM_ID
  from
   (select extract(year from STC.START_DATE) as ASR_YEAR,
      STC.LOC_ID_ASYLUM_COUNTRY, STC.DIM_ID1, STC.STG_ID_PRIMARY,
      replace(STC.STCT_CODE, '-', '_') ||
        case
          when extract(day from STC.END_DATE) = 2 then '_START'
          when extract(day from STC.START_DATE) = 31 then '_END'
        end as COLUMN_NAME,
      STC.VALUE,
      STC.ID as STC_ID,
      STC.VERSION_NBR,
      STC.ITM_ID
    from T_STATISTIC_TYPES_IN_GROUPS STTIG
    inner join T_STATISTICS STC
      on STC.STCT_CODE = STTIG.STCT_CODE
    where STTIG.STTG_CODE = 'STATELESS')
  pivot
   (sum(VALUE) as VALUE, max(STC_ID) as STC_ID, max(VERSION_NBR) as VERSION_NBR,
      max(ITM_ID) as ITM_ID
    for COLUMN_NAME
    in ('STAPOP_START' as STAPOP_START,
        'STAPOP_AH_START' as STAPOP_AH_START,
        'NATLOSS' as NATLOSS,
        'STAOTHINC' as STAOTHINC,
        'NATACQ' as NATACQ,
        'STAOTHDEC' as STAOTHDEC,
        'STAPOP_END' as STAPOP_END,
        'STAPOP_AH_END' as STAPOP_AH_END))),
--
Q_DIMENSION_VALUES as
 (select ID, DESCRIPTION
  from
   (select DIM.ID, TXT.TEXT as DESCRIPTION,
      row_number() over
       (partition by DIM.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_DIMENSION_VALUES DIM
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = DIM.ITM_ID
      and TXT.TXTT_CODE = 'DESCR'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1),
--
Q_STATISTIC_GROUPS as
 (select ID, VERSION_NBR, ITM_ID, UPDATE_TIMESTAMP, UPDATE_USERID, POPULATION_SUBGROUP_NAME
  from
   (select STG.ID, STG.VERSION_NBR, STG.ITM_ID, STG.UPDATE_TIMESTAMP, STG.UPDATE_USERID,
      TXT.TEXT as POPULATION_SUBGROUP_NAME,
      row_number() over
       (partition by STG.ID
        order by LANG.ACTIVE_FLAG desc, nvl(ULP.PREF_SEQ, LANG.DISPLAY_SEQ + 1e5)) as RANK
    from T_STATISTIC_GROUPS STG
    inner join T_TEXT_ITEMS TXT
      on TXT.ITM_ID = STG.ITM_ID
      and TXT.TXTT_CODE = 'PSGRNAME'
      and TXT.SEQ_NBR = 1
    inner join T_LANGUAGES LANG
      on LANG.CODE = TXT.LANG_CODE
    left outer join T_USER_LANGUAGE_PREFERENCES ULP
      on ULP.LANG_CODE = TXT.LANG_CODE
      and ULP.USERID = sys_context('PSR', 'USERID'))
  where RANK = 1)
--
select cast(STA.ASR_YEAR as number(4)) as ASR_YEAR, STA.LOC_ID_ASYLUM_COUNTRY,
  STA.DIM_ID_SPOPTYPE, DIM.DESCRIPTION as SPOPTYPE_DESCRIPTION,
  STA.STG_ID_PRIMARY, STG.POPULATION_SUBGROUP_NAME,
  STG.VERSION_NBR as STG_VERSION_NBR, STG.ITM_ID as STG_ITM_ID,
  STGA1.CHAR_VALUE as SOURCE, STGA1.VERSION_NBR as STGA_VERSION_NBR_SOURCE,
  STGA1.ITM_ID as STGA_ITM_ID_SOURCE,
  STGA2.CHAR_VALUE as BASIS, STGA2.VERSION_NBR as STGA_VERSION_NBR_BASIS,
  STGA2.ITM_ID as STGA_ITM_ID_BASIS,
  STA.STAPOP_START_VALUE,
  STA.STAPOP_START_STC_ID, STA.STAPOP_START_VERSION_NBR, STA.STAPOP_START_ITM_ID,
  STA.STAPOP_AH_START_VALUE,
  STA.STAPOP_AH_START_STC_ID, STA.STAPOP_AH_START_VERSION_NBR, STA.STAPOP_AH_START_ITM_ID,
  STA.NATLOSS_VALUE,
  STA.NATLOSS_STC_ID, STA.NATLOSS_VERSION_NBR, STA.NATLOSS_ITM_ID,
  STA.STAOTHINC_VALUE,
  STA.STAOTHINC_STC_ID, STA.STAOTHINC_VERSION_NBR, STA.STAOTHINC_ITM_ID,
  STA.NATACQ_VALUE,
  STA.NATACQ_STC_ID, STA.NATACQ_VERSION_NBR, STA.NATACQ_ITM_ID,
  STA.STAOTHDEC_VALUE,
  STA.STAOTHDEC_STC_ID, STA.STAOTHDEC_VERSION_NBR, STA.STAOTHDEC_ITM_ID,
  STA.STAPOP_END_VALUE,
  STA.STAPOP_END_STC_ID, STA.STAPOP_END_VERSION_NBR, STA.STAPOP_END_ITM_ID,
  STA.STAPOP_AH_END_VALUE,
  STA.STAPOP_AH_END_STC_ID, STA.STAPOP_AH_END_VERSION_NBR, STA.STAPOP_AH_END_ITM_ID,
  STG.UPDATE_TIMESTAMP, STG.UPDATE_USERID
from Q_ASR_STATELESS STA
left outer join Q_DIMENSION_VALUES DIM
  on DIM.ID = STA.DIM_ID_SPOPTYPE
left outer join Q_STATISTIC_GROUPS STG
  on STG.ID = STA.STG_ID_PRIMARY
left outer join T_STC_GROUP_ATTRIBUTES STGA1
  on STGA1.STG_ID = STG.ID
  and STGA1.STGAT_CODE = 'SOURCE'
left outer join T_STC_GROUP_ATTRIBUTES STGA2
  on STGA2.STG_ID = STG.ID
  and STGA2.STGAT_CODE = 'BASIS';
